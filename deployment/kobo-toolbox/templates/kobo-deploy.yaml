# Sync gateway pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kobo
  namespace: {{ .Release.Namespace }}
spec:
  # This pod can NOT be scaled, because it persists local files
  replicas: 1
  selector:
    matchLabels:
      org.kobotoolbox.instance: {{ .Release.Name }}-kobo
  template:
    metadata:
      annotations:
        # Add a checksum to force the re-creation of the pods on every config update
        # TODO: better checksum
        checksum/config: {{ .Values | toString | sha256sum }}
        checksum/nginx_conf: {{ include "nginx_conf" . | sha256sum }}
      labels:
        org.kobotoolbox.instance: {{ .Release.Name }}-kobo
    spec:
      # Define internal host names since we're doing host-based routing
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "{{ .Values.kpi.subdomain }}.kobo.local"
        - "{{ .Values.kobocat.subdomain }}.kobo.local"
        - "{{ .Values.enketo.subdomain }}.kobo.local"
        {{- if .Values.general.forceInternal }}
        - "{{ .Values.kpi.subdomain }}.{{ .Values.general.externalDomain }}"
        - "{{ .Values.kobocat.subdomain }}.{{ .Values.general.externalDomain }}"
        - "{{ .Values.enketo.subdomain }}.{{ .Values.general.externalDomain }}"
        {{- end }}

      initContainers:
      # Wait for Mongo and Postgres
      - name: wait-db
        image: jwilder/dockerize
        command:
        - sh
        - -c
        - dockerize -timeout=40s -wait tcp://${KOBO_MONGO_HOST}:${KOBO_MONGO_PORT} -wait tcp://${POSTGRES_HOST}:${POSTGRES_PORT}
        env:
        {{ include "env_mongo" . | nindent 8 }}
        {{ include "env_postgres" . | nindent 8 }}

      # Copy settings from configmap to a volume, since it needs to be writable
      - name: copy-config
        image: busybox
        command:
        - sh
        - -c
        - |
          cp /config-init/config.json /srv/src/enketo_express/config/
        volumeMounts:
        - name: enketo-config
          mountPath: /config-init/config.json
          subPath: config.json
          readOnly: true
        - name: cache-volume
          subPath: config
          mountPath: /srv/src/enketo_express/config

      # All containers need to be in the same pod since they share volumes!
      # This also means they probably can't be scaled up... (?)
      # TODO: add some health probes
      containers:
      # Nginx does the host-based routing for all containers
      - name: nginx
        image: nginx:1.19
        volumeMounts:
        # Config
        - name: nginx-confd
          mountPath: /etc/nginx/conf.d
        # empty init dir
        - name: nginx-init
          mountPath: /docker-entrypoint.d
        # Web files (generated by other containers)
        - name: persistence
          subPath: static
          mountPath: /srv/www
        - name: persistence
          subPath: kobocat_media_uploads
          mountPath: /media

      # Kobocat is the forms API server that Enketo / Collect will connect to
      - name: kobocat
        image: "{{ .Values.kobocat.image.name }}:{{ .Values.kobocat.image.tag }}"
        # command:
        # - sh
        # - -c
        # - cat
        # tty: true
        # TODO: wait for KPI container?
        ports:
        - containerPort: 8001
        env:
        {{ include "env_general" . | nindent 8 }}
        {{ include "env_mongo" . | nindent 8 }}
        {{ include "env_postgres" . | nindent 8 }}
        {{ include "env_redis" . | nindent 8 }}
        {{ include "env_externals" . | nindent 8 }}
        {{ include "env_kobocat" . | nindent 8 }}
        {{ include "env_uwsgi" "KC" | nindent 8 }}
        {{ include "env_smtp" . | nindent 8 }}
        - name: ENKETO_PROTOCOL
          value: http
        - name: KPI_PORT
          value: '8003'
        volumeMounts:
        # Replace redundant init scripts with empty files
        - name: config
          mountPath: /etc/my_init.d/01_wait_for_mongo.bash
          subPath: empty_script
          readOnly: true
        - name: config
          mountPath: /etc/my_init.d/02_wait_for_postgres.bash
          subPath: empty_script
          readOnly: true
        # Config
        - name: config
          mountPath: /srv/src/kobocat/docker/kobocat.ini
          subPath: kc_uwsgi.ini
          readOnly: true
        # Store uploaded media in PVC
        - name: persistence
          subPath: kobocat_media_uploads
          mountPath: /srv/src/kobocat/media
        - name: persistence
          subPath: static/kobocat
          mountPath: /srv/static

      # KPI is the main User Interface and admin API
      - name: kpi
        image: "{{ .Values.kpi.image.name }}:{{ .Values.kpi.image.tag }}"
        # Override entrypoint to redirect logs to stdout
        command:
        - sh
        - -c
        - |
          # Replace background image if needed (statics already compiled)
          if [ -f /srv/src/kpi/staticfiles/compiled/signup_photo.jpg ]; then
            echo "Replacing background"
            cp -f /srv/src/kpi/jsapp/img/signup_photo.jpg /srv/src/kpi/staticfiles/compiled/signup_photo.jpg
          fi
          
          # Init log files so we can pipe them
          touch /srv/logs/celery_beat.log && touch /srv/logs/celery.log && touch /srv/logs/celery_sync_kobocat_xforms.log

          # Run with dockerize
          dockerize -stdout /srv/logs/celery_beat.log -stdout /srv/logs/celery.log -stdout /srv/logs/celery_sync_kobocat_xforms.log /srv/src/kpi/docker/init.bash
        # - cat
        # tty: true
        env:
        {{ include "env_general" . | nindent 8 }}
        {{ include "env_mongo" . | nindent 8 }}
        {{ include "env_postgres" . | nindent 8 }}
        {{ include "env_redis" . | nindent 8 }}
        {{ include "env_externals" . | nindent 8 }}
        {{ include "env_kpi" . | nindent 8 }}
        {{ include "env_uwsgi" "KPI" | nindent 8 }}
        {{ include "env_smtp" . | nindent 8 }}
        - name: SYNC_KOBOCAT_XFORMS
          value: 'True'
        - name: C_FORCE_ROOT
          value: 'True'

        ports:
        # Using custom port since kobocat insists on using 8000
        - containerPort: 8003
        volumeMounts:
        # Override init scripts with empty ones
        - name: config
          subPath: empty_script
          mountPath: /srv/init/wait_for_mongo.bash
          readOnly: true
        - name: config
          subPath: empty_script
          mountPath: /srv/init/wait_for_postgres.bash
          readOnly: true
        - name: config
          subPath: empty_script
          mountPath: /etc/profile.d/runtime_variables_kpi.source.bash.sh
          readOnly: true
        # Web server settings
        - name: config
          subPath: kpi_uwsgi.ini
          mountPath: /srv/src/kpi/uwsgi.ini
          readOnly: true
        # www
        - name: persistence
          subPath: static/kpi
          mountPath: /srv/static
        # media
        - name: persistence
          subPath: kpi_media
          mountPath: /srv/src/kpi/media
        - name: persistence
          subPath: kobocat_media_uploads
          mountPath: /srv/src/kobocat/media
        {{- if .Values.kpi.signupPhoto }}
        # Custom icons
        - name: kobo-assets
          mountPath: /srv/src/kpi/jsapp/img/signup_photo.jpg
          subPath: signup_photo.jpg
          readOnly: true
        {{- end }}

      # Enketo is the web-based form viewer
      - name: enketo
        image: "{{ .Values.enketo.image.name }}:{{ .Values.enketo.image.tag }}"
        volumeMounts:
        # Config
        - name: cache-volume
          subPath: config/config.json
          mountPath: /srv/src/enketo_express/config/config.json
        # Cache build
        - name: cache-volume
          subPath: checksum
          mountPath: /srv/src/enketo_express/checksum
        - name: cache-volume
          subPath: build/css
          mountPath: /srv/src/enketo_express/public/css
        - name: cache-volume
          subPath: build/js
          mountPath: /srv/src/enketo_express/public/js/build
        - name: cache-volume
          subPath: build/locales
          mountPath: /srv/src/enketo_express/locales/build
        # Custom icons
        - name: kobo-assets
          mountPath: /srv/src/enketo_express/public/images/favicon.ico
          subPath: favicon.ico
          readOnly: true
        - name: kobo-assets
          mountPath: /srv/src/enketo_express/public/images/icon_180x180.png
          subPath: icon_180x180.png
          readOnly: true
        ports:
        - containerPort: 8005
        env:
        - name: ENKETO_BUILD_IE11
          value: 'true'

      volumes:
      - name: nginx-confd
        configMap:
          name: {{ .Release.Name }}-nginx-confd
      - name: enketo-config
        secret:
          secretName: {{ .Release.Name }}-enketo
      - name: config
        configMap:
          name: {{ .Release.Name }}-kobo
          # Grant exec permissions
          defaultMode: 0755
      - name: kobo-assets
        configMap:
          name: {{ .Release.Name }}-assets
      - name: persistence
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-kobo
      # Using an emptyDir to cache compiled statics... it will survive container crashes, but not pod restarts
      - name: cache-volume
        emptyDir: {}
      - name: nginx-init
        emptyDir: {}
